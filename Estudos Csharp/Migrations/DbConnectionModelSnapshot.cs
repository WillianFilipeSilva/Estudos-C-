// <auto-generated />
using System;
using Estudos_Csharp.Infraestrutura;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Estudos_Csharp.Migrations
{
    [DbContext(typeof(DbConnection))]
    partial class DbConnectionModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Estudos_Csharp.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Autor")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<DateTime>("Lancamento")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.Property<double>("Preco")
                        .HasColumnType("double precision");

                    b.HasKey("Id");

                    b.ToTable("Livros");
                });

            modelBuilder.Entity("Estudos_Csharp.LivroEstoque", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("LivroId")
                        .HasColumnType("integer");

                    b.Property<int>("Quantidade")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.ToTable("LivrosEstoque");
                });

            modelBuilder.Entity("Estudos_Csharp.LivroLocado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LivroId")
                        .HasColumnType("integer");

                    b.Property<int>("SolicitanteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("LivrosLocados");
                });

            modelBuilder.Entity("Estudos_Csharp.LocacaoFinalizada", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("DataDevolucao")
                        .HasColumnType("timestamp with time zone");

                    b.Property<int>("LivroLocadoId")
                        .HasColumnType("integer");

                    b.Property<long>("Multa")
                        .HasColumnType("bigint");

                    b.Property<int>("SolicitanteId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("LivroLocadoId");

                    b.HasIndex("SolicitanteId");

                    b.ToTable("LocacoesFinalizadas");
                });

            modelBuilder.Entity("Estudos_Csharp.Solicitante", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("character varying(15)");

                    b.HasKey("Id");

                    b.ToTable("Solicitantes");
                });

            modelBuilder.Entity("Estudos_Csharp.LivroEstoque", b =>
                {
                    b.HasOne("Estudos_Csharp.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Livro");
                });

            modelBuilder.Entity("Estudos_Csharp.LivroLocado", b =>
                {
                    b.HasOne("Estudos_Csharp.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Estudos_Csharp.Solicitante", "Solicitante")
                        .WithMany("Locacoes")
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Livro");

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("Estudos_Csharp.LocacaoFinalizada", b =>
                {
                    b.HasOne("Estudos_Csharp.LivroLocado", "LivroLocado")
                        .WithMany()
                        .HasForeignKey("LivroLocadoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Estudos_Csharp.Solicitante", "Solicitante")
                        .WithMany("LocacoesFinalizadas")
                        .HasForeignKey("SolicitanteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LivroLocado");

                    b.Navigation("Solicitante");
                });

            modelBuilder.Entity("Estudos_Csharp.Solicitante", b =>
                {
                    b.Navigation("Locacoes");

                    b.Navigation("LocacoesFinalizadas");
                });
#pragma warning restore 612, 618
        }
    }
}
